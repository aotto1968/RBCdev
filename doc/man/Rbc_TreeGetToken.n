.\" Automatically generated by Pandoc 1.17.1
.\"
.ad l
.TH "Rbc_TreeGetToken" "n" "" "RBC(0.2)" "RBC Built-In Commands"
.hy
.SH NAME
.PP
Rbc_TreeGetToken \- Grabs a token associated with existing tree data
object.
.SH SYNOPSIS
.PP
\f[B]#include <rbcTree.h>\f[]
.PP
int
.PD 0
.P
.PD
\f[B]Rbc_TreeGetToken\f[](\f[I]interp\f[], \f[I]name\f[],
\f[I]tokenPtr\f[])
.SH ARGUMENTS
.TP
.B Tcl_Interp \f[I]*interp\f[] (in)
Interpreter to report results back to.
.RS
.RE
.TP
.B const char \f[I]*name\f[] (in)
Name of an existing tree data object.
Can be qualified by a namespace.
.RS
.RE
.TP
.B Rbc_Tree \f[I]*tokenPtr\f[] (out)
Points to location to store the client tree token.
.RS
.RE
.SH DESCRIPTION
.PP
This procedure obtains a token to a C\-based tree data object.
The arguments are as follows:
.TP
.B \f[I]interp\f[]
Interpreter to report results back to.
If an error occurs, then interp\->result will contain an error message.
.RS
.RE
.TP
.B \f[I]name\f[]
Name of an existing tree data object.
It\[aq]s an error if a tree \f[I]name\f[] doesn\[aq]t already exist.
\f[I]Name\f[] can be qualified by a namespace such as fred::myTree.
If no namespace qualifier is used, the tree the current namespace is
searched, then the global namespace.
.RS
.RE
.TP
.B \f[I]tokenPtr\f[]
Points to the location where the returned token is stored.
A tree token is used to work with the tree object.
.RS
.RE
.PP
A token for the tree data object is returned.
Tree data objects can be shared.
For example, the \f[B]tree\f[] and \f[B]hiertable\f[] commands may be
accessing the same tree data object.
Each client grabs a token that is associated with the tree.
When all tokens are released (see \f[B]Rbc_TreeReleaseToken\f[]) the
tree data object is automatically destroyed.
.SH RETURNS
.PP
A standard Tcl result is returned.
If TCL_ERROR is returned, then \f[I]interp\->result\f[] will contain an
error message.
The following errors may occur:
.IP \[bu] 2
No tree exists as \f[I]name\f[].
You can use \f[B]Tcl_TreeExists\f[] to determine if a tree exists
beforehand.
.IP \[bu] 2
Memory can\[aq]t be allocated for the token.
.SH EXAMPLE
.PP
The following example allocated a token for an existing tree.
.IP
.nf
\f[C]
Rbc_Tree\ token;

if\ (Rbc_TreeGetToken(interp,\ "myTree",\ &token)\ !=\ TCL_OK)\ {
\ \ \ \ return\ TCL_ERROR;
}
printf("tree\ is\ %s\\n",\ Rbc_TreeName(token));
\f[]
.fi
.SH SEE ALSO
.PP
Tcl_TreeCreate, Tcl_TreeExists, Tcl_TreeReleaseToken
