'\"
'\" Copyright 1991-1997 by Bell Labs Innovations for Lucent Technologies.
'\"
'\" Permission to use, copy, modify, and distribute this software and its
'\" documentation for any purpose and without fee is hereby granted, provided
'\" that the above copyright notice appear in all copies and that both that the
'\" copyright notice and warranty disclaimer appear in supporting documentation,
'\" and that the names of Lucent Technologies any of their entities not be used
'\" in advertising or publicity pertaining to distribution of the software
'\" without specific, written prior permission.
'\"
'\" Lucent Technologies disclaims all warranties with regard to this software,
'\" including all implied warranties of merchantability and fitness.  In no event
'\" shall Lucent Technologies be liable for any special, indirect or
'\" consequential damages or any damages whatsoever resulting from loss of use,
'\" data or profits, whether in an action of contract, negligence or other
'\" tortuous action, arising out of or in connection with the use or performance
'\" of this software.  
'\"
.so man.macros
.TH intro n RBC_VERSION RBC "RBC Built-In Commands"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
RBC \- Introduction to the RBC library
.BE
.SH DESCRIPTION
RBC is a library of extensions to the Tk library.  It adds new
commands and variables to the application's interpreter.
.LP
.SH COMPOSITION COMMANDS
The following commands are added to the interpreter from the RBC library:
.TP 15
\fBtable\fR 
A \fBtable\fR geometry manager for Tk.  You specify window placements as table 
row,column positions and windows can also span multiple rows or columns. 
It also has many options for setting and/or bounding window sizes.
.TP 15
\fBcontainer\fR 
The \fBcontainer\fR widget lets you embed an X11 window from a foreign
application into your Tk application.  The foreign window is
reparented inside of the widget. You can then place and arrange the
container just as you would any Tk widget.
.TP 15
\fBtabset\fR 
The \fBtabset\fR widget displays a series of overlapping folders. Only
the contents of one folder at a time is displayed.  By clicking on the
tab's of a folder, you can view other folders.  Each folder may
contain any Tk widget that can be automatically positioned and resized
in the folder.
.TP 15
\fBtreeview\fR 
The \fBtreeview\fR widget displays hierarchical data.  Data is
represented as nodes in a general-ordered tree.  Each node may have
sub-nodes and these nodes can in turn has their own children.
A node is displayed as a row entry in the widget.  Each entry has a
text label and icon.  When a node has children, its entry is drawn
with a small button to the left of the label.  Clicking the mouse over
this button opens or closes the node.  When a node is \fIopen\fR, its
children are exposed.  When it is \fIclosed\fR, the children and their
descedants are hidden.  The button is normally a \f(CW+\fR or
\f(CW\-\fR symbol (ala Windows Explorer), but can be replaced with a
pair of Tk images (open and closed images).
The \fBtreeview\fR widget replaces both the \fBhiertable\fR and 
\fBhierbox\fR widgets.
.TP 15
\fBhtext\fR 
A simple hypertext widget.  Combines text and Tk widgets into a single
scroll-able window.  Tcl commands can be embedded into text, which are
invoked as the text is parsed.  In addition, Tk widgets can be
appended to the window at the current point in the text.  \fBHtext\fR
can be also used to create scrolled windows of Tk widgets.
.SH PLOTTING COMMANDS
.TP 15
\fBgraph\fR 
A 2D plotting widget.  Plots two variable data in a window with an optional 
legend and annotations.   It has of several components; coordinate axes, 
crosshairs, a legend, and a collection of elements and tags.
.TP 15
\fBstripchart\fR 
The \fBstripchart\fR command creates a strip chart for plotting
two-dimensional data (x,y coordinates). It has many configurable
components: coordinate axes, elements, legend, grid lines, cross
hairs, etc.  They allow you to customize the look and feel of the
strip chart. The \fBstripchart\fR is essentially the same as the \fBgraph\fR
widget. The use of a strip chart differs in that the X-axis typically refers
to time points.  Data values are added at intervals.  The strip chart
lets you automatically maintain a view of the most recent time points.
The axis options \fB\-shiftby\fR and \fB\-autorange\fR control this.
You can specify different line styles for data points (see the
\fB\-styles\fR option).
.TP 15
\fBspline\fR
Computes a spline fitting a set of data points (x and y vectors) and
produces a vector of the interpolated images (y-coordinates) at a
given set of x-coordinates.
.TP 15
\fBbarchart\fR 
A barchart widget.  Plots two-variable data as rectangular bars in a 
window.  The x-coordinate values designate the position of the bar along 
the x-axis, while the y-coordinate values designate the magnitude.
The \fBbarchart\fR widget has of several components; coordinate axes, 
crosshairs, a legend, and a collection of elements and tags.
.SH MISCELLANEOUS COMMANDS
.TP 15
\fBvector\fR 
Creates a vector of floating point values.  The vector's components
can be manipulated in three ways: through a Tcl array variable, a Tcl
command, or the C API.
.TP 15
\fBtree\fR 
The \fBtree\fR command creates tree data objects.  A \fItree object\fR
is general ordered tree of nodes.  Each node has both a label and a
key-value list of data.  Data can be heterogeneous, since nodes do not
have to contain the same data keys.  It is associated with a Tcl
command that you can use to access and modify the its structure and
data. Tree objects can also be managed via a C API.
.TP 15
\fBbgexec\fR 
Like Tcl's \fBexec\fR command, \fBbgexec\fR runs a pipeline of Unix 
commands in the background.  Unlike \fBexec\fR, the output of the last
process is collected and a global Tcl variable is set upon its completion.
\fBbgexec\fR can be used with \fBtkwait\fR to wait for Unix commands
to finish while still handling expose events.  Intermediate output is
also available while the pipeline is active.
.TP 15
\fBbitmap\fR 
Reads and writes bitmaps from Tcl.  New X bitmaps can be defined
on-the-fly from Tcl, obviating the need to copy around bitmap files.  
Other options query loaded X bitmap's dimensions and data.
.TP 15
\fBdrag&drop\fR 
Provides a drag-and-drop facility for Tk.  Information (represented
by a token window) can be dragged to and from any Tk window, including
those of another Tk application.  \fBdrag&drop\fR acts as a 
coordinator, directing Tk \fBsend\fR commands between (or within) TCL/Tk 
applications. 
.TP 15
\fBwinop\fR 
Raise, lower, map, or, unmap any window.  The raise and lower functions
are useful for stacking windows above or below "busy windows".
.TP 15
\fBwatch\fR 
Arranges for Tcl procedures to be called before and/or after the execution
of every Tcl command. This command
may be used in the logging, profiling, or tracing of Tcl code.
.TP 15
\fBrbcdebug\fR 
A simple Tcl command tracing facility useful for debugging Tcl code.  
Displays each Tcl command before and after substitution along its level 
in the interpreter on standard error.
.SH VARIABLES
.PP
The following Tcl variables are either set or used by RBC at various times
in its execution:
.TP 15
\fBrbc_library\fR or \fB::rbc::library\fR
This variable contains the name of a directory containing a library
of Tcl scripts and other files related to RBC.  Currently, this 
directory contains the \fBdrag&drop\fR protocol scripts and the 
PostScript prolog used by \fBgraph\fR and \fBbarchart\fR.
The value of this variable is taken from the pkgIndex.tcl file at
startup.
.TP 15
\fB::rbc\fR
Top level namespace of the \fBrbc\fR widget and tool collection
.SH ADDING RBC TO YOUR APPLICATIONS
It's easy to add RBC to an existing Tk application.  RBC requires no 
patches or edits to the Tcl or Tk libraries.  To add RBC, simply add the 
following code snippet to your application's tcl file.  
.CS
package require rbc
.CE
To compile the \fBrbc\fR use the following \fBGNU\fR standard procedure
.CS
configure…
make…
make install…
.CE
To start the \fBdemo\fR use…
.CS
make demo
.CE
or
.CS
make wish ARGS=demos/barchart1.tcl ?DEBUG=valgrind?
.CE
.PP
.SH BUGS
Send bug reports, requests, suggestions, etc. to 
\fBhttps://github.com/aotto1968/RBCdev/\fR
.SH KEYWORDS
RBC
